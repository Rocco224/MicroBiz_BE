version: '3.8'

services:
  auth-service:
    image: auth-service
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    ports:
      - "8000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=AuthServiceDB;User ID=Rocco;Password=admin;TrustServerCertificate=True;
  
  hr-service:
    image: hr-service
    build:
      context: .
      dockerfile: HRService/Dockerfile
    ports:
      - "8001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=HRServiceDB;User ID=Rocco;Password=admin;TrustServerCertificate=True;
      #- ConnectionStrings__DefaultConnection=Server=192.168.1.53,1433;Database=HRServiceDB;User ID=Rocco;Password=admin;TrustServerCertificate=True;

  inventory-service:
    image: inventory-service
    build:
      context: .
      dockerfile: InventoryService/Dockerfile
    ports:
      - "8002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=InventoryServiceDB;User ID=Rocco;Password=admin;TrustServerCertificate=True;

  sales-service:
    image: sales-service
    build:
      context: .
      dockerfile: SalesService/Dockerfile
    ports:
      - "8003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=SalesServiceDB;User ID=Rocco;Password=admin;TrustServerCertificate=True;